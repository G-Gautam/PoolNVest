"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ABI = [
    {
        constant: true,
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'uint256' }],
        name: 'cumulativeRewardWeights',
        outputs: [{ name: 'numerator', type: 'uint256' }, { name: 'denominator', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'totalWeight',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'registryAddress', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'address' }],
        name: 'delegations',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'maxNoticePeriod',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        anonymous: false,
        inputs: [{ indexed: false, name: 'maxNoticePeriod', type: 'uint256' }],
        name: 'MaxNoticePeriodSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: false, name: 'role', type: 'uint8' },
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'delegate', type: 'address' },
        ],
        name: 'RoleDelegated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'account', type: 'address' }],
        name: 'VotingFrozen',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'account', type: 'address' }],
        name: 'VotingUnfrozen',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
            { indexed: false, name: 'noticePeriod', type: 'uint256' },
        ],
        name: 'DepositBonded',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
            { indexed: false, name: 'noticePeriod', type: 'uint256' },
            { indexed: false, name: 'availabilityTime', type: 'uint256' },
        ],
        name: 'DepositNotified',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
            { indexed: false, name: 'noticePeriod', type: 'uint256' },
            { indexed: false, name: 'availabilityTime', type: 'uint256' },
        ],
        name: 'DepositRebonded',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
        ],
        name: 'Withdrawal',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
            { indexed: false, name: 'noticePeriod', type: 'uint256' },
            { indexed: false, name: 'increase', type: 'uint256' },
        ],
        name: 'NoticePeriodIncreased',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'registryAddress', type: 'address' }],
        name: 'RegistrySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'previousOwner', type: 'address' },
            { indexed: true, name: 'newOwner', type: 'address' },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        constant: false,
        inputs: [
            { name: 'registryAddress', type: 'address' },
            { name: '_maxNoticePeriod', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'blockReward', type: 'uint256' }],
        name: 'setCumulativeRewardWeight',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: '_maxNoticePeriod', type: 'uint256' }],
        name: 'setMaxNoticePeriod',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'createAccount',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'redeemRewards',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'freezeVoting',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'unfreezeVoting',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'role', type: 'uint8' },
            { name: 'delegate', type: 'address' },
            { name: 'v', type: 'uint8' },
            { name: 'r', type: 'bytes32' },
            { name: 's', type: 'bytes32' },
        ],
        name: 'delegateRole',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'noticePeriod', type: 'uint256' }],
        name: 'deposit',
        outputs: [{ name: '', type: 'uint256' }],
        payable: true,
        stateMutability: 'payable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'value', type: 'uint256' }, { name: 'noticePeriod', type: 'uint256' }],
        name: 'notify',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'value', type: 'uint256' }, { name: 'availabilityTime', type: 'uint256' }],
        name: 'rebond',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'availabilityTime', type: 'uint256' }],
        name: 'withdraw',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'value', type: 'uint256' },
            { name: 'noticePeriod', type: 'uint256' },
            { name: 'increase', type: 'uint256' },
        ],
        name: 'increaseNoticePeriod',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'isVotingFrozen',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '_account', type: 'address' }],
        name: 'getRewardsLastRedeemed',
        outputs: [{ name: '', type: 'uint96' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'validator', type: 'address' }],
        name: 'isValidating',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '_account', type: 'address' }],
        name: 'getNoticePeriods',
        outputs: [{ name: '', type: 'uint256[]' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '_account', type: 'address' }],
        name: 'getAvailabilityTimes',
        outputs: [{ name: '', type: 'uint256[]' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '_account', type: 'address' }, { name: 'noticePeriod', type: 'uint256' }],
        name: 'getBondedDeposit',
        outputs: [{ name: '', type: 'uint256' }, { name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '_account', type: 'address' }, { name: 'availabilityTime', type: 'uint256' }],
        name: 'getNotifiedDeposit',
        outputs: [{ name: '', type: 'uint256' }, { name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'accountOrDelegate', type: 'address' }, { name: 'role', type: 'uint8' }],
        name: 'getAccountFromDelegateAndRole',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '_account', type: 'address' }],
        name: 'getAccountWeight',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'isVoting',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'value', type: 'uint256' }, { name: 'noticePeriod', type: 'uint256' }],
        name: 'getDepositWeight',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'pure',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }, { name: 'role', type: 'uint8' }],
        name: 'getDelegateFromAccountAndRole',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
];
function newBondedDeposits(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newBondedDeposits = newBondedDeposits;
//# sourceMappingURL=BondedDeposits.js.map