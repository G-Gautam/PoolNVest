"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var address_1 = require("@celo/utils/lib/src/address");
var bn_1 = require("@celo/utils/lib/src/bn");
var collections_1 = require("@celo/utils/lib/src/collections");
var web3_1 = __importDefault(require("web3"));
var base_1 = require("../base");
var BaseWrapper_1 = require("./BaseWrapper");
var ValidatorsWrapper = /** @class */ (function (_super) {
    __extends(ValidatorsWrapper, _super);
    function ValidatorsWrapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ValidatorsWrapper.prototype.getRegisteredValidators = function () {
        return __awaiter(this, void 0, void 0, function () {
            var vgAddresses;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.getRegisteredValidators().call()];
                    case 1:
                        vgAddresses = _a.sent();
                        return [2 /*return*/, Promise.all(vgAddresses.map(function (addr) { return _this.getValidator(addr); }))];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.getValidator = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.getValidator(address).call()];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, {
                                address: address,
                                id: res[0],
                                name: res[1],
                                url: res[2],
                                publicKey: res[3],
                                affiliation: res[4],
                            }];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.getRegisteredValidatorGroups = function () {
        return __awaiter(this, void 0, void 0, function () {
            var vgAddresses;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.getRegisteredValidatorGroups().call()];
                    case 1:
                        vgAddresses = _a.sent();
                        return [2 /*return*/, Promise.all(vgAddresses.map(function (addr) { return _this.getValidatorGroup(addr); }))];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.getValidatorGroup = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.getValidatorGroup(address).call()];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, { address: address, id: res[0], name: res[1], url: res[2], members: res[3] }];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.getValidatorGroupsVotes = function () {
        return __awaiter(this, void 0, void 0, function () {
            var vgAddresses, res, r, _i, vgAddresses_1, vgAddress;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.getRegisteredValidatorGroups().call()];
                    case 1:
                        vgAddresses = _a.sent();
                        return [4 /*yield*/, this.contract.methods.getValidatorGroupVotes().call()];
                    case 2:
                        res = _a.sent();
                        r = collections_1.zip(function (a, b) { return ({ address: a, votes: web3_1.default.utils.toBN(b) }); }, res[0], res[1]);
                        for (_i = 0, vgAddresses_1 = vgAddresses; _i < vgAddresses_1.length; _i++) {
                            vgAddress = vgAddresses_1[_i];
                            if (!res[0].includes(vgAddress)) {
                                r.push({ address: vgAddress, votes: web3_1.default.utils.toBN(0) });
                            }
                        }
                        return [2 /*return*/, r];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.getVoteFrom = function (validatorAddress) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.contract.methods.voters(validatorAddress).call()];
            });
        });
    };
    ValidatorsWrapper.prototype.revokeVote = function () {
        return __awaiter(this, void 0, void 0, function () {
            var bondedDeposits, votingDetails, votedGroup, _a, lesser, greater;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.kit.defaultAccount == null) {
                            throw new Error("missing from at new ValdidatorUtils()");
                        }
                        return [4 /*yield*/, this.kit.contracts.getBondedDeposits()];
                    case 1:
                        bondedDeposits = _b.sent();
                        return [4 /*yield*/, bondedDeposits.getVotingDetails(this.kit.defaultAccount)];
                    case 2:
                        votingDetails = _b.sent();
                        return [4 /*yield*/, this.getVoteFrom(votingDetails.accountAddress)];
                    case 3:
                        votedGroup = _b.sent();
                        if (votedGroup == null) {
                            throw new Error("Not current vote for " + this.kit.defaultAccount);
                        }
                        return [4 /*yield*/, this.findLesserAndGreaterAfterVote(votedGroup, votingDetails.weight.neg())];
                    case 4:
                        _a = _b.sent(), lesser = _a.lesser, greater = _a.greater;
                        return [2 /*return*/, this.contract.methods.revokeVote(lesser, greater)];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.vote = function (validatorGroup) {
        return __awaiter(this, void 0, void 0, function () {
            var bondedDeposits, votingDetails, _a, lesser, greater;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.kit.defaultAccount == null) {
                            throw new Error("missing from at new ValdidatorUtils()");
                        }
                        return [4 /*yield*/, this.kit.contracts.getBondedDeposits()];
                    case 1:
                        bondedDeposits = _b.sent();
                        return [4 /*yield*/, bondedDeposits.getVotingDetails(this.kit.defaultAccount)];
                    case 2:
                        votingDetails = _b.sent();
                        return [4 /*yield*/, this.findLesserAndGreaterAfterVote(validatorGroup, votingDetails.weight)];
                    case 3:
                        _a = _b.sent(), lesser = _a.lesser, greater = _a.greater;
                        return [2 /*return*/, this.contract.methods.vote(validatorGroup, lesser, greater)];
                }
            });
        });
    };
    ValidatorsWrapper.prototype.findLesserAndGreaterAfterVote = function (votedGroup, voteWeight) {
        return __awaiter(this, void 0, void 0, function () {
            var currentVotes, selectedGroup, newIdx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getValidatorGroupsVotes()];
                    case 1:
                        currentVotes = _a.sent();
                        selectedGroup = currentVotes.find(function (cv) { return address_1.eqAddress(cv.address, votedGroup); });
                        // modify the list
                        if (selectedGroup) {
                            selectedGroup.votes = selectedGroup.votes.add(voteWeight);
                        }
                        else {
                            currentVotes.push({
                                address: votedGroup,
                                votes: voteWeight,
                            });
                        }
                        // re-sort
                        currentVotes.sort(function (a, b) { return bn_1.compareBN(a.votes, b.votes); });
                        newIdx = currentVotes.findIndex(function (cv) { return address_1.eqAddress(cv.address, votedGroup); });
                        return [2 /*return*/, {
                                lesser: newIdx === 0 ? base_1.NULL_ADDRESS : currentVotes[newIdx - 1].address,
                                greater: newIdx === currentVotes.length - 1 ? base_1.NULL_ADDRESS : currentVotes[newIdx + 1].address,
                            }];
                }
            });
        });
    };
    return ValidatorsWrapper;
}(BaseWrapper_1.BaseWrapper));
exports.ValidatorsWrapper = ValidatorsWrapper;
//# sourceMappingURL=Validators.js.map