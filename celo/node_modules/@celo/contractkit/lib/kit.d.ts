import Web3 from 'web3';
import { TransactionObject, Tx } from 'web3/eth/types';
import { AddressRegistry } from './address-registry';
import { Address, CeloToken } from './base';
import { WrapperCache } from './contract-cache';
import { TxOptions } from './utils/send-tx';
import { TransactionResult } from './utils/tx-result';
import { Web3ContractCache } from './web3-contract-cache';
export declare function newKit(url: string): ContractKit;
export declare function newKitFromWeb3(web3: Web3): ContractKit;
export declare class ContractKit {
    readonly web3: Web3;
    readonly registry: AddressRegistry;
    readonly _web3Contracts: Web3ContractCache;
    readonly contracts: WrapperCache;
    defaultOptions: TxOptions;
    constructor(web3: Web3);
    setGasCurrency(token: CeloToken): Promise<void>;
    defaultAccount: Address;
    setGasCurrencyAddress(address: Address): void;
    sendTransaction(tx: Tx): TransactionResult;
    sendTransactionObject(txObj: TransactionObject<any>, options?: TxOptions): Promise<TransactionResult>;
}
