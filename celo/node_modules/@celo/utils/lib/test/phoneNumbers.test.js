"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var phoneNumbers_1 = require("../src/phoneNumbers");
var COUNTRY_CODES = {
    US: '+1',
    DE: '+49',
    AR: '+54',
};
var TEST_PHONE_NUMBERS = {
    VALID_US_1: '6282287826',
    VALID_US_2: '(628) 228-7826',
    VALID_US_3: '+16282287826',
    VALID_US_4: '16282287826',
    VALID_DE_1: '015229355106',
    VALID_DE_2: '01522 (935)-5106',
    VALID_DE_3: '+49 01522 935 5106',
    VALID_AR_1: '02641234567',
    VALID_AR_2: '(264) 1234-567',
    VALID_AR_3: '+54264 123-4567',
    VALID_AR_4: '9 11 12345678',
    VALID_AR_5: '(380) 15 123-4567',
    INVALID_EMPTY: '',
    TOO_SHORT: '123',
};
describe('Phone number formatting and utilities', function () {
    describe('E164 formatting', function () {
        it('Invalid empty', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.INVALID_EMPTY, COUNTRY_CODES.US)).toBe(null);
        });
        it('Format US phone simple, no country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_US_1, COUNTRY_CODES.US)).toBe('+16282287826');
        });
        it('Format US phone messy, no country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_US_2, COUNTRY_CODES.US)).toBe('+16282287826');
        });
        it('Format US phone simple, with country code and wrong region', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_US_3, COUNTRY_CODES.AR)).toBe('+16282287826');
        });
        it('Format US phone simple, with country code no plus', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_US_4, COUNTRY_CODES.US)).toBe('+16282287826');
        });
        it('Format DE phone simple, no country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_DE_1, COUNTRY_CODES.DE)).toBe('+4915229355106');
        });
        it('Format DE phone messy, no country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_DE_2, COUNTRY_CODES.DE)).toBe('+4915229355106');
        });
        it('Format DE phone messy, wrong country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_DE_2, COUNTRY_CODES.US)).toBe(null);
        });
        it('Format DE phone with country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_DE_3, COUNTRY_CODES.DE)).toBe('+4915229355106');
        });
        it('Format AR phone simple, no country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_AR_1, COUNTRY_CODES.AR)).toBe('+5492641234567');
        });
        it('Format AR phone messy, no country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_AR_2, COUNTRY_CODES.AR)).toBe('+5492641234567');
        });
        it('Format AR phone messy, wrong country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_AR_2, COUNTRY_CODES.US)).toBe(null);
        });
        it('Format AR phone with country code', function () {
            expect(phoneNumbers_1.getE164Number(TEST_PHONE_NUMBERS.VALID_AR_3, COUNTRY_CODES.AR)).toBe('+5492641234567');
        });
    });
    describe('Display formatting', function () {
        it('Invalid empty', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.INVALID_EMPTY, COUNTRY_CODES.US)).toBe('');
        });
        it('Format US phone simple, no country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_US_1, COUNTRY_CODES.US)).toBe('(628) 228-7826');
        });
        it('Format US phone messy, no country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_US_2, COUNTRY_CODES.US)).toBe('(628) 228-7826');
        });
        it('Format US phone simple, with country code and wrong region', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_US_3, COUNTRY_CODES.AR)).toBe('(628) 228-7826');
        });
        it('Format US phone simple, with country code but no param', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_US_3, COUNTRY_CODES.US)).toBe('(628) 228-7826');
        });
        it('Format US phone simple, with country code no plus', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_US_4, COUNTRY_CODES.US)).toBe('(628) 228-7826');
        });
        it('Format DE phone simple, no country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_DE_1, COUNTRY_CODES.DE)).toBe('01522 9355106');
        });
        it('Format DE phone messy, no country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_DE_2, COUNTRY_CODES.DE)).toBe('01522 9355106');
        });
        it('Format DE phone messy, wrong country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_DE_2, COUNTRY_CODES.US)).toBe(TEST_PHONE_NUMBERS.VALID_DE_2);
        });
        it('Format DE phone with country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_DE_3, COUNTRY_CODES.DE)).toBe('01522 9355106');
        });
        it('Format AR phone simple, no country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_AR_1, COUNTRY_CODES.AR)).toBe('9 264 123-4567');
        });
        it('Format AR phone messy, no country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_AR_2, COUNTRY_CODES.AR)).toBe('9 264 123-4567');
        });
        it('Format AR phone messy, wrong country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_AR_2, COUNTRY_CODES.US)).toBe(TEST_PHONE_NUMBERS.VALID_AR_2);
        });
        it('Format AR phone with country code', function () {
            expect(phoneNumbers_1.getDisplayPhoneNumber(TEST_PHONE_NUMBERS.VALID_AR_3, COUNTRY_CODES.AR)).toBe('9 264 123-4567');
        });
    });
    describe('Number Parsing', function () {
        it('Invalid empty', function () {
            expect(phoneNumbers_1.parsePhoneNumber(TEST_PHONE_NUMBERS.INVALID_EMPTY, COUNTRY_CODES.US)).toBe(null);
        });
        it('Too short', function () {
            expect(phoneNumbers_1.parsePhoneNumber(TEST_PHONE_NUMBERS.TOO_SHORT, COUNTRY_CODES.US)).toBe(null);
        });
        it('Format US messy phone #', function () {
            expect(phoneNumbers_1.parsePhoneNumber(TEST_PHONE_NUMBERS.VALID_US_2, COUNTRY_CODES.US)).toMatchObject({
                e164Number: '+16282287826',
                displayNumber: '(628) 228-7826',
                countryCode: 1,
                regionCode: 'US',
            });
        });
        it('Format DE messy phone #', function () {
            expect(phoneNumbers_1.parsePhoneNumber(TEST_PHONE_NUMBERS.VALID_DE_2, COUNTRY_CODES.DE)).toMatchObject({
                e164Number: '+4915229355106',
                displayNumber: '01522 9355106',
                countryCode: 49,
                regionCode: 'DE',
            });
        });
        it('Format AR messy phone # 1', function () {
            expect(phoneNumbers_1.parsePhoneNumber(TEST_PHONE_NUMBERS.VALID_AR_4, COUNTRY_CODES.AR)).toMatchObject({
                e164Number: '+5491112345678',
                displayNumber: '9 11 1234-5678',
                countryCode: 54,
                regionCode: 'AR',
            });
        });
        it('Format AR messy phone # 2', function () {
            expect(phoneNumbers_1.parsePhoneNumber(TEST_PHONE_NUMBERS.VALID_AR_5, COUNTRY_CODES.AR)).toMatchObject({
                e164Number: '+5493801234567',
                displayNumber: '9 380 123-4567',
                countryCode: 54,
                regionCode: 'AR',
            });
        });
    });
    describe('Other phone helper methods', function () {
        it('gets country code', function () {
            expect(phoneNumbers_1.getCountryCode(TEST_PHONE_NUMBERS.VALID_US_3)).toBe(1);
            expect(phoneNumbers_1.getCountryCode(TEST_PHONE_NUMBERS.VALID_DE_3)).toBe(49);
            expect(phoneNumbers_1.getCountryCode(TEST_PHONE_NUMBERS.VALID_AR_3)).toBe(54);
        });
        it('gets region code', function () {
            expect(phoneNumbers_1.getRegionCode(TEST_PHONE_NUMBERS.VALID_US_3)).toBe('US');
            expect(phoneNumbers_1.getRegionCode(TEST_PHONE_NUMBERS.VALID_DE_3)).toBe('DE');
            expect(phoneNumbers_1.getRegionCode(TEST_PHONE_NUMBERS.VALID_AR_3)).toBe('AR');
        });
        it('gets region code from country code', function () {
            expect(phoneNumbers_1.getRegionCodeFromCountryCode(COUNTRY_CODES.US)).toBe('US');
            expect(phoneNumbers_1.getRegionCodeFromCountryCode(COUNTRY_CODES.DE)).toBe('DE');
            expect(phoneNumbers_1.getRegionCodeFromCountryCode(COUNTRY_CODES.AR)).toBe('AR');
        });
        it('checks if number is e164', function () {
            // @ts-ignore
            expect(phoneNumbers_1.isE164Number(null)).toBe(false);
            expect(phoneNumbers_1.isE164Number('')).toBe(false);
            expect(phoneNumbers_1.isE164Number(TEST_PHONE_NUMBERS.VALID_US_1)).toBe(false);
            expect(phoneNumbers_1.isE164Number(TEST_PHONE_NUMBERS.VALID_US_2)).toBe(false);
            expect(phoneNumbers_1.isE164Number(TEST_PHONE_NUMBERS.VALID_US_3)).toBe(true);
            expect(phoneNumbers_1.isE164Number(TEST_PHONE_NUMBERS.VALID_US_4)).toBe(false);
        });
    });
});
